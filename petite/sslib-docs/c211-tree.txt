name: tree
form: value left right
return: a tree

Create a new tree storing the given _value_ and with subtrees _left_ and _right_.

---

name: leaf
form: value
return: a tree

Create a new tree storing the given _value_ and no subtrees. Identical to _(tree value (empty-tree) (empty-tree))_.

---

name: empty-tree
form: 
return: an empty tree

Create a new empty tree. This is a special tree that signifies the end of a branch and is used for creating leaves.

---

name: tree?
form: obj
return: #t or #f

Test if _obj_ is a tree. Returns #t on either a tree or an empty-tree.

---

name: leaf?
form: obj
return: #t or #f

Test if _obj_ is a leaf. Equivalent to _(and (tree? obj) (empty-tree? (left-subtree obj)) (empty-tree? (right-subtree obj)))_.

---

name: empty-tree?
form: obj
return: #t or #f

Test if _obj_ is an empty tree.

---

name: root-value
form: tree
return: a value

Gets the value stored in a tree node.

---

name: left-subtree
form: tree
return: a value

Returns the left subtree of a tree.

---

name: right-subtree
form: tree
return: a value

Returns the right subtree of a tree.

---

name: draw-tree
form: tree

Displays a graphical representation of _tree_.

---

name: left-subtree?
form: tree
return: #t or #f

Returns #t if and only if _tree_ is a tree, _tree_ has a left subtree, and the left subtree of _tree_ is a non-empty tree.

---

name: right-subtree?
form: tree
return: #t or #f

Returns #t if and only if _tree_ is a tree, _tree_ has a right subtree, and the right subtree of _tree_ is a non-empty tree.
