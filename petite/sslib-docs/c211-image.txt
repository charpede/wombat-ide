name: color
form: r g b
return: a color

Create a new color with red, green, and blue values of _r_, _g_, and _b_ respectively.

--- 

name: make-image
form: rows cols
form: rows cols color
form: rows cols generator
return: an image

Create a new _rows_ x _cols_ image, defaulting to a black background.

If _color_ is specified, fill with that color instead. 

If _generator_ is specified, it should be a function of the form _(lambda (r c rows cols) ...)_ where r and c are the coordinates of a specific pixel and rows and cols are the size passed the the _make-image_ function.

---

name: image-map
form: image procedure
return: an image

Create a new image of the same size as _image_ by mapping a _procedure_ of the form _(lambda (color) ...)_ over each pixel in the original.

---

name: color?
form: obj
return: #t or #f

Test if _obj_ is a color.

---

name: image?
form: obj
return: #t or #f

Test if _obj_ is a colr

---

name: image-rows 
form: image
return: a non-negative integer

Return how many rows are in _image_.

--- 

name: image-cols
form: image
return: a non-negative integer

Return how many columns are in _image_.

---

name: image-ref 
form: image row column
form: image row column band
return: a color or an integer in the range [0, 255]

If _band_ is not specified, access the pixel in _image_ and _row_ x _column_ and return the corresponding color.

If _band_ is specified and one of either _'red_, _'green_, or _'blue_ or the corresponding integers 0, 1, or 2, then access the pixel in _image_ at _row_ x _column_ and return that given _band_ from the pixel as an integer in the range [0, 255].

---

name: color-ref
form: color band
return: an integer in the range [0, 255]

Band should be one of either _'red_, _'green_, or _'blue_ or the corresponding integers 0, 1, or 2. Access the color object, returning the amount of that specified color as an integer in the range [0, 255] where 0 is none of that color and 255 is the maximum amount.

---

name: image-set! 
form: image row column color
form: image row column band value

Mutate the given _image_ at the pixel specified by _row_ x _column_. 

If _color_ is specified, store that color at that pixel.

If _band_ and _value_ are specified, band should be one of either _'red_, _'green_, or _'blue_ or the corresponding integers 0, 1, or 2 and _value_ should be in the range [0, 255]. Change that band of that pixel to the given value.

---

name: read-image
form: 
form: file
return: an image

If _file_ is specified, load and return that _file_ as an image. Otherwise, display a dialog to allow the user to choose a file.

Formats that can be read depend on the underlying Java Virtual Machine. At least JPG, PNG, GIF, and BMP will always be supported.

---

name: write-image
form: image
form: image file

If _file_ is specified, write the given _image_ to that _file_. Otherwise, display a dialog to allow the user to choose a file.

Formats that can be written depend on the underlying Java Virtual Machine. At least JPG, PNG, GIF, and BMP will always be supported.

---

name: draw-image
form: image

Display the _image_ to the screen.

---

name: color-equal? 
form: color color
return: #t or #f

Test if two colors are equal.

---

name: image-equal?
form: image image
return: #t or #f

Test if two images are equal.
